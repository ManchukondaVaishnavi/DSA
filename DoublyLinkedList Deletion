import java.util.*;
public class DoublyLinkedList{
    static Node head;
    static Node tail;
    public static class Node{
        int d;
        Node next;
        Node pre;
        public Node(int d){
            this.d=d;
            
        }
    }
  
    public void Displayf(){
        Node n=head;
        System.out.println("Forward direction");
        while(n!=null){
            System.out.print(n.d+" ");
            n=n.next;
        }
        System.out.println();
    }
    public void Displayb(){
        Node n=tail;
        System.out.println("Backward direction");
        while(n!=null){
            System.out.print(n.d+" ");
            n=n.pre;
        }
        System.out.println();
    }
    public void DeleteBeg(){
        head=head.next;
        head.pre=null;
    }
     public void DeleteLast(){
         tail=tail.pre;
         tail.next=null;
     }   
    public void Deletepos(int pos){
        Node n=head;
        Node p=null;
        int i=1;
        while(i<pos){
            p=n;
            n=n.next;
            i++;
        }
        p.next=n.next;
        n.pre=p;
    }
    public static void main(String [] args){
        Scanner s=new Scanner(System.in);
        DoublyLinkedList l=new DoublyLinkedList();
        head =new Node(10);
        Node sec=new Node(11);
        Node thi=new Node(12);
        Node f=new Node(13);
        Node f5=new Node(14);
        Node n6=new Node(15);
        tail=new Node(16);
        head.next=sec;
        sec.next=thi;
        thi.next=f;
        f.next=f5;
        f5.next=n6;
        n6.next=tail;
      tail.next=null;
        head.pre=null;
        sec.pre=head;
        thi.pre=sec;
        f.pre=thi;
        f5.pre=f;
        n6.pre=f5;
       tail.pre=n6;
      l.Displayf(); 
     l.Displayb();
       l.DeleteBeg();
      l.Displayf();
      l.DeleteLast();
      l.Displayf();
      l.Deletepos(3);
      l.Displayf();
    }
}

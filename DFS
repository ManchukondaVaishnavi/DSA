import java.util.*;
public class Graph{
LinkedList <Integer>adj[];
  public Graph(int n){
      this.adj=new LinkedList[n];
      for(int i=0;i<n;i++){
          adj[i]=new LinkedList<>();
      }
  }
  public void addEdge(int u,int v){
      adj[u].add(v);
      adj[v].add(u);
  }
  public void DFS(int s,int n){
      boolean visited[]=new boolean[n];
      Stack<Integer> st=new Stack<>();
      st.push(s);
    
      while(!st.isEmpty()){
          int u=st.pop();
          if(!visited[u]){
              visited[u]=true;
          
          System.out.print(u+" ");
          for(int a:adj[u]){
              if(!visited[a]){
                  st.push(a);
              }
          }
      }
  }
  }
    public static void main(String args[]){
        Scanner s=new Scanner(System.in);
        System.out.print("Enter no of nodes:");
        int n=s.nextInt();
       Graph g=new Graph(n);
       for(int i=0;i<n;i++){
           System.out.println("Enter 2 nodes having link:");
           int u=s.nextInt();
           int v=s.nextInt();
           g.addEdge(u,v);
       }
       g.DFS(1,n);
    }
}

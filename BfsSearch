import java.util.*;
public class Graph{
    
    static LinkedList <Integer> adj[];
    Graph(int nodes){
        this.adj=new LinkedList[nodes];
        for(int i=0;i<nodes;i++){
            adj[i]=new LinkedList<>();
        }
    }
    
public static void addEdge(int u,int v){
    adj[u].add(v);
    adj[v].add(u);
}
public static int BFS(int s,int v,int x){
    Queue<Integer> q=new LinkedList<>();
    boolean visited[]=new boolean[v];
    visited[s]=true;
    q.offer(s);
    int i=1;
    while(!q.isEmpty()){
        int u=q.poll();
        if(u==x){
            return i;
        }
        
        for(int a:adj[u]){
            if(!visited[a]){
                visited[a]=true;
                q.offer(a);
            }
        }
        i++;
    }
    return -1;
    }
    public static void main(String args[]){
        Graph g=new Graph(4);
        g.addEdge(0,1);
        g.addEdge(1,2);
        g.addEdge(2,3);
        g.addEdge(3,0);
        int h=BFS(0,4,2);
        System.out.print(h);
    }
}
